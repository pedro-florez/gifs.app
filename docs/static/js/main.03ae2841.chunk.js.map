{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifItem.js","components/GifCard.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","search","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","notFound","state","setState","useEffect","then","imgs","setTimeout","GifItem","className","src","alt","GifCard","image","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"kLAgDeA,EA5CK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KA4BvC,OACI,sBAAMC,SAjBW,SAACC,GAElBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAG5BR,GAAe,SAAAS,GAAI,MAAI,CAAEP,MAIzBC,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SA5Bc,SAACP,GAGvBF,EAAeE,EAAEQ,OAAOF,QA0BhBG,YAAY,8B,8BCZbC,EAvBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAMNC,EANM,iDAM2CC,UAAUH,GANrD,+DAOOI,MAAOF,GAPd,cAONG,EAPM,gBAQWA,EAAIC,OARf,uBAQJC,EARI,EAQJA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAhB9B,kBAoBLM,GApBK,4CAAH,sDCmCEO,EAhCM,SAAEf,GAAY,MAGLf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,EACTC,UAAU,IANiB,mBAGxBC,EAHwB,KAGjBC,EAHiB,KA6B/B,OAnBAC,qBAAU,WAGNrB,EAASC,GAASqB,MAAM,SAAAC,GAGpBC,YAAW,WAEPJ,EAAS,CACLZ,KAAMe,EACNN,SAAS,EACTC,SAA4B,IAAhBK,EAAK9B,WAGtB,UAGR,CAAEQ,IAEEkB,GCvBIM,EATC,SAAC,GAAoB,IAAlBZ,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtB,OACI,qBAAKuB,UAAU,OAAf,SACI,qBAAKC,IAAMxB,EAAMyB,IAAMf,OCiCpBgB,EAnCC,SAAC,GAAgB,IAAd5B,EAAa,EAAbA,OAAa,EAIee,EAAcf,GAA5Ca,EAJe,EAIpBN,KAAaS,EAJO,EAIPA,QAASC,EAJF,EAIEA,SAE9B,OACI,qCACI,4CAAgBjB,EAAhB,OAEEgB,GAAW,qBAAKS,UAAU,SAAf,yBAGTR,GACA,sBAAKQ,UAAU,UAAf,UACI,2CACA,qGAIR,qBAAKA,UAAU,YAAf,SAEQZ,EAAOJ,KAAK,SAAAoB,GAAK,OAEb,cAAC,EAAD,eAESA,GADCA,EAAMlB,aCJzBmB,EApBM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,WAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAIvB,OACI,qCACI,2CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGI+C,EAAWtB,KAAK,SAAAuB,GAAS,OAErB,cAAC,EAAD,CAA2BhC,OAASgC,GAArBA,U,MCbnCC,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.03ae2841.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    // Cambiar Value del Input\r\n    const handleInputChange = (e) => {\r\n\r\n        // Setear el valor del input\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    // Enviar Formulario\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // Validar que tenga Valor el Input\r\n        if ( inputValue.trim().length > 2 ) {\r\n\r\n            // Setear el setCategorias\r\n            setCategorias( cats => [ inputValue ] );\r\n            //setCategorias( cats => [ inputValue, ...cats ] );\r\n            \r\n            // Limpiar el Input\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                placeholder=\"Buscar GIF Favorito...\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\n/* Buscar Gifs en la Api GIPHY\r\n-------------------------------------------------- */\r\nconst getGifs = async( search ) => {\r\n\r\n    // Escapar string encodeURI(string)\r\n    // Bartils => Alt + 96 ``\r\n    // Comentarios en Bloque => Mayus + Alt + A\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(search) }&limit=10&api_key=Fs6qTUI6lZFhID2zfLBSPFJHQsNQpuPp`;\r\n    const res  = await fetch( url );\r\n    const { data } = await res.json();\r\n\r\n    // Obtener Informacion\r\n    const gifs = data.map( img => {\r\n        \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;\r\n","\r\nimport { useEffect, useState } from \"react\";\r\nimport getGifs from '../helpers/getGifs';\r\n\r\n/* Custom Hook\r\n-------------------------------------------------- */\r\nconst useFetchGifs = ( search ) => {\r\n\r\n    // Estado Inicial\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n        notFound: false\r\n    });\r\n\r\n    // Evitar que se Ejecute Varias veces\r\n    useEffect(() => {\r\n\r\n        // Realizar peticion\r\n        getGifs( search ).then( imgs => {\r\n\r\n            // Setear el Estado inicial\r\n            setTimeout(() => {\r\n        \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                    notFound: ( imgs.length === 0 ? true : false )\r\n                });\r\n\r\n            }, 2000);\r\n        });\r\n                     \r\n    }, [ search ]);    \r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;\r\n","\r\nimport React from 'react';\r\n\r\nconst GifItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItem;\r\n","\r\nimport React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifItem from './GifItem';\r\n\r\nconst GifCard = ({ search }) => {\r\n\r\n    /* LLamando al ( Custom Hook )\r\n    ** Renombra Const Data => data:images */\r\n    const { data:images, loading, notFound } = useFetchGifs( search );\r\n    \r\n    return (\r\n        <> \r\n            <h3>Busqueda \"{ search }\"</h3>\r\n\r\n            { loading && <div className=\"loader\">Cargando...</div> }\r\n\r\n            {\r\n                notFound &&\r\n                <div className=\"mensaje\">\r\n                    <h1>¡Oops!</h1>\r\n                    <h2>Lo sentimos, no hemos encontrado resultados para tu búsqueda.</h2>\r\n                </div> \r\n            }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( image =>                   \r\n                        \r\n                        <GifItem \r\n                            key={ image.id }\r\n                            { ...image }\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifCard;\r\n","\r\nimport React, { useState } from 'react';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport GifCard from './GifCard';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categorias, setCategorias] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Giphy App</h2>\r\n            <AddCategory setCategorias={ setCategorias } />            \r\n            <hr/>\r\n\r\n            {\r\n                categorias.map( categoria =>\r\n\r\n                    <GifCard key={ categoria } search={ categoria } />\r\n                )\r\n            }            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './assets/index.css';\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\n"],"sourceRoot":""}